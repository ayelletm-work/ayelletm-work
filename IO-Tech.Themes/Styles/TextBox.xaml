<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:IO_Tech.Themes.Converters"
    xmlns:customPackIcon="clr-namespace:IO_Tech.Themes.CustomControls.CustomPackIcon"
    xmlns:customSmartHint="clr-namespace:IO_Tech.Themes.CustomControls.CustomSmartHint"
    xmlns:customUnderline="clr-namespace:IO_Tech.Themes.CustomControls.CustomUnderline"
    xmlns:helpers="clr-namespace:IO_Tech.Themes.Helpers">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ValidationErrorTemplate.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:TextFieldClearButtonVisibilityConverter x:Key="ClearButtonVisibilityConverter" />
    <converters:TextFieldPrefixTextVisibilityConverter x:Key="PrefixTextVisibilityConverter" />
    <converters:NotConverter x:Key="NotConverter" />
    <converters:MathConverter x:Key="MathMultiplyConverter" Operation="Multiply" />
    <converters:FloatingHintOffsetCalculationConverter x:Key="FloatingHintOffsetCalculationConverter" />



    <Style x:Key="MaterialDesignTextBoxBase" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="helpers:TextFieldAssist.TextBoxViewMargin" Value="{x:Static helpers:Constants.DefaultTextBoxViewMargin}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Padding" Value="{x:Static helpers:Constants.TextBoxDefaultPadding}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MaterialDesignValidationErrorTemplate}" />
        <Setter Property="helpers:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="helpers:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource MaterialDesignDefaultContextMenu}" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="helpers:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
        <Setter Property="helpers:TextFieldAssist.CharacterCounterStyle" Value="{DynamicResource CharacterCounterTextBlock}" />
        <Setter Property="helpers:TextFieldAssist.CharacterCounterVisibility" Value="Visible" />
        <Setter Property="helpers:HintAssist.HelperTextStyle" Value="{DynamicResource HelperTextBlock}" />
        <Setter Property="helpers:ClearText.HandlesClearCommand" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"
                            CornerRadius="{TemplateBinding helpers:TextFieldAssist.TextFieldCornerRadius}"
                            RenderTransformOrigin="0.5,0.5"
                            Visibility="{TemplateBinding helpers:TextFieldAssist.RippleOnFocusEnabled,
                                                         Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="RippleOnFocusScaleTransform" ScaleX="0" ScaleY="0" />
                            </Border.RenderTransform>
                        </Border>
                        <AdornerDecorator>
                            <Border
                                x:Name="border"
                                Padding="{TemplateBinding Padding}"
                                helpers:BottomDashedLineAdorner.Brush="{TemplateBinding BorderBrush}"
                                helpers:BottomDashedLineAdorner.Thickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding helpers:TextFieldAssist.TextFieldCornerRadius}"
                                SnapsToDevicePixels="True">
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <customPackIcon:PackIcon
                                        x:Name="LeadingPackIcon"
                                        Grid.Column="0"
                                        Width="{TemplateBinding helpers:TextFieldAssist.LeadingIconSize}"
                                        Height="{TemplateBinding helpers:TextFieldAssist.LeadingIconSize}"
                                        Margin="0,0,6,0"
                                        VerticalAlignment="Center"
                                        Kind="{TemplateBinding helpers:TextFieldAssist.LeadingIcon}"
                                        Opacity="{TemplateBinding helpers:HintAssist.HintOpacity}"
                                        Visibility="{TemplateBinding helpers:TextFieldAssist.HasLeadingIcon,
                                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <Grid
                                        x:Name="grid"
                                        Grid.Column="1"
                                        MinWidth="1">
                                        <Grid Grid.Column="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock
                                                x:Name="PrefixTextBlock"
                                                Grid.Column="0"
                                                Margin="0,0,2,0"
                                                FontSize="{TemplateBinding FontSize}"
                                                Opacity="{TemplateBinding helpers:HintAssist.HintOpacity}"
                                                Text="{TemplateBinding helpers:TextFieldAssist.PrefixText}">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource PrefixTextVisibilityConverter}">
                                                        <Binding ElementName="Hint" Path="IsHintInFloatingPosition" />
                                                        <Binding Path="(helpers:TextFieldAssist.PrefixText)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                            </TextBlock>

                                            <ScrollViewer
                                                x:Name="PART_ContentHost"
                                                Grid.Column="1"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Panel.ZIndex="1"
                                                helpers:ScrollViewerAssist.IgnorePadding="True"
                                                Focusable="false"
                                                HorizontalScrollBarVisibility="Hidden"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                VerticalScrollBarVisibility="Hidden" />

                                            <TextBlock
                                                x:Name="SuffixTextBlock"
                                                Grid.Column="2"
                                                FontSize="{TemplateBinding FontSize}"
                                                Opacity="{TemplateBinding helpers:HintAssist.HintOpacity}"
                                                Text="{TemplateBinding helpers:TextFieldAssist.SuffixText}" />
                                        </Grid>

                                        <customSmartHint:SmartHint
                                            x:Name="Hint"
                                            Grid.Column="0"
                                            Margin="{TemplateBinding helpers:TextFieldAssist.TextBoxViewMargin}"
                                            FloatingOffset="{TemplateBinding helpers:HintAssist.FloatingOffset}"
                                            FloatingScale="{TemplateBinding helpers:HintAssist.FloatingScale}"
                                            FontFamily="{TemplateBinding helpers:HintAssist.FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            HintOpacity="{TemplateBinding helpers:HintAssist.HintOpacity}"
                                            HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:HintProxyFabricConverter.Instance}}"
                                            UseFloating="{TemplateBinding helpers:HintAssist.IsFloating}">
                                            <customSmartHint:SmartHint.Hint>
                                                <Border
                                                    x:Name="HintBackgroundBorder"
                                                    Background="{TemplateBinding helpers:HintAssist.Background}"
                                                    CornerRadius="2">
                                                    <ContentPresenter x:Name="HintWrapper" Content="{TemplateBinding helpers:HintAssist.Hint}" />
                                                </Border>
                                            </customSmartHint:SmartHint.Hint>
                                        </customSmartHint:SmartHint>

                                    </Grid>

                                    <customPackIcon:PackIcon
                                        x:Name="TrailingPackIcon"
                                        Grid.Column="2"
                                        Width="{TemplateBinding helpers:TextFieldAssist.TrailingIconSize}"
                                        Height="{TemplateBinding helpers:TextFieldAssist.TrailingIconSize}"
                                        Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        Kind="{TemplateBinding helpers:TextFieldAssist.TrailingIcon}"
                                        Opacity="{TemplateBinding helpers:HintAssist.HintOpacity}"
                                        Visibility="{TemplateBinding helpers:TextFieldAssist.HasTrailingIcon,
                                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                                    <Button
                                        x:Name="PART_ClearButton"
                                        Grid.Column="2"
                                        Height="Auto"
                                        Padding="2,0,0,0"
                                        Command="{x:Static helpers:ClearText.ClearCommand}"
                                        Focusable="False"
                                        Style="{StaticResource MaterialDesignToolButton}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource ClearButtonVisibilityConverter}">
                                                <Binding Path="(helpers:TextFieldAssist.HasClearButton)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding ElementName="Hint" Path="IsContentNullOrEmpty" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                        <customPackIcon:PackIcon Margin="0" Kind="CloseCircle" />
                                    </Button>
                                </Grid>
                            </Border>
                        </AdornerDecorator>
                        <Border
                            x:Name="borderUnderline"
                            Height="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Background="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding helpers:TextFieldAssist.UnderlineCornerRadius}"
                            SnapsToDevicePixels="True"
                            Visibility="{TemplateBinding helpers:TextFieldAssist.DecorationVisibility}" />
                        <customUnderline:Underline
                            x:Name="Underline"
                            Background="{TemplateBinding helpers:TextFieldAssist.UnderlineBrush}"
                            CornerRadius="{TemplateBinding helpers:TextFieldAssist.UnderlineCornerRadius}"
                            Visibility="{TemplateBinding helpers:TextFieldAssist.DecorationVisibility}" />
                        <Canvas VerticalAlignment="Bottom">
                            <Grid
                                x:Name="FooterGrid"
                                Canvas.Top="2"
                                Width="{Binding ActualWidth, ElementName=border}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="HelperTextTextBlock" Style="{Binding Path=(helpers:HintAssist.HelperTextStyle), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border x:Name="CharacterCounterContainer" Grid.Column="1">
                                    <TextBlock x:Name="CharacterCounterTextBlock" Style="{Binding Path=(helpers:TextFieldAssist.CharacterCounterStyle), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                            </Grid>
                        </Canvas>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard TargetName="RippleOnFocusScaleTransform">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleX"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleY"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.45"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            BeginTime="0:0:0.45"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard TargetName="RippleOnFocusScaleTransform">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:HintAssist.IsFloating" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Hint" Property="Foreground" Value="{Binding Path=(helpers:HintAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:HintAssist.IsFloating" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Hint" Property="FloatingOffset">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource FloatingHintOffsetCalculationConverter}">
                                        <Binding Path="FontFamily" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(helpers:HintAssist.FloatingScale)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(helpers:HintAssist.FloatingOffset)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="grid" Property="Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource FloatingHintOffsetCalculationConverter}">
                                        <Binding Path="FontFamily" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(helpers:HintAssist.FloatingScale)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(helpers:HintAssist.FloatingOffset)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="helpers:TextFieldAssist.HasFilledTextField" Value="True">
                            <Setter Property="Padding" Value="16,8,12,8" />
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
                            <Setter Property="helpers:TextFieldAssist.TextBoxViewMargin" Value="{x:Static helpers:Constants.DefaultTextBoxViewMarginEmbedded}" />
                            <Setter TargetName="HelperTextTextBlock" Property="Margin" Value="16,0,0,0" />
                        </Trigger>
                        <Trigger Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
                            <Setter Property="Padding" Value="16,16,12,16" />
                            <Setter Property="helpers:TextFieldAssist.TextBoxViewMargin" Value="{x:Static helpers:Constants.DefaultTextBoxViewMarginEmbedded}" />
                            <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                            <Setter TargetName="HintWrapper" Property="Opacity" Value="{Binding Path=(helpers:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Hint" Property="FloatingOffset">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource FloatingHintOffsetCalculationConverter}">
                                        <Binding Path="FontFamily" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(helpers:HintAssist.FloatingScale)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(helpers:HintAssist.FloatingOffset)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Padding" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HelperTextTextBlock" Property="Margin" Value="16,0,0,0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
                                <Condition Property="helpers:HintAssist.IsFloating" Value="True" />
                                <Condition SourceName="Hint" Property="IsHintInFloatingPosition" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintBackgroundBorder" Property="Padding" Value="4,0" />
                            <Setter Property="helpers:HintAssist.Background" Value="{DynamicResource MaterialDesignPaper}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
                                <Condition Property="helpers:HintAssist.IsFloating" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintWrapper" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <DataTrigger Value="0">
                            <DataTrigger.Binding>
                                <PriorityBinding>
                                    <Binding
                                        FallbackValue="0"
                                        Path="MaxLength"
                                        RelativeSource="{RelativeSource Self}" />
                                    <Binding Source="0" />
                                </PriorityBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="CharacterCounterContainer" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <!--  IsEnabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="grid" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="border" Property="helpers:BottomDashedLineAdorner.IsAttached" Value="True" />
                            <Setter TargetName="borderUnderline" Property="Height" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="borderUnderline" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="borderUnderline" Property="Height" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}" />
                            <Setter TargetName="PrefixTextBlock" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="SuffixTextBlock" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="PART_ClearButton" Property="Opacity" Value="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}" />
                            <Setter TargetName="HintWrapper" Property="Opacity">
                                <Setter.Value>
                                    <Binding
                                        Converter="{StaticResource MathMultiplyConverter}"
                                        ConverterParameter="{x:Static helpers:Constants.TextBoxNotEnabledOpacity}"
                                        Path="(helpers:HintAssist.HintOpacity)"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <!--  IsKeyboardFocused  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Underline" Property="IsActive" Value="True" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Margin" Value="-1" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="{Binding Path=(helpers:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="borderUnderline" Property="Height" Value="2" />
                        </MultiTrigger>

                        <!--  IsMouseOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasFilledTextField" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.NewSpecHighlightingEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(helpers:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasFilledTextField" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldAssist.NewSpecHighlightingEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="border" Property="Padding" Value="0,4,0,3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}" />
                            <Setter TargetName="borderUnderline" Property="Height" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Margin" Value="-1" />
                            <Setter Property="BorderThickness" Value="2" />
                        </MultiTrigger>

                        <!--  Validation.HasError  -->
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Margin" Value="-1" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                            <Setter TargetName="FooterGrid" Property="Margin" Value="0,0,1,0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialDesignTextBox"
        BasedOn="{StaticResource MaterialDesignTextBoxBase}"
        TargetType="{x:Type TextBox}" />

    <Style
        x:Key="MaterialDesignFloatingHintTextBox"
        BasedOn="{StaticResource MaterialDesignTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:HintAssist.IsFloating" Value="True" />
    </Style>

    <Style
        x:Key="MaterialDesignFilledTextBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:TextFieldAssist.HasFilledTextField" Value="True" />
        <Setter Property="helpers:TextFieldAssist.RippleOnFocusEnabled" Value="True" />
        <Setter Property="helpers:TextFieldAssist.TextFieldCornerRadius" Value="4,4,0,0" />
        <Setter Property="helpers:TextFieldAssist.UnderlineCornerRadius" Value="0" />
    </Style>

    <Style
        x:Key="MaterialDesignOutlinedTextBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:TextFieldAssist.HasOutlinedTextField" Value="True" />
        <Setter Property="helpers:TextFieldAssist.TextFieldCornerRadius" Value="4" />
    </Style>

</ResourceDictionary>