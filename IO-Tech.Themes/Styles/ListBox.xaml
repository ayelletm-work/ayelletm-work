<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:IO_Tech.Themes.Converters"
    xmlns:customCard="clr-namespace:IO_Tech.Themes.CustomControls.CustomCard"
    xmlns:customPackIcon="clr-namespace:IO_Tech.Themes.CustomControls.CustomPackIcon"
    xmlns:customRipple="clr-namespace:IO_Tech.Themes.CustomControls.CustomRipple"
    xmlns:customUnderline="clr-namespace:IO_Tech.Themes.CustomControls.CustomUnderline"
    xmlns:helpers="clr-namespace:IO_Tech.Themes.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IO-Tech.Themes;component/CustomControls/CustomRipple/Ripple.xaml" />

        <ResourceDictionary Source="/IO-Tech.Themes;component/Styles/ScrollViewer.xaml" />
        <ResourceDictionary>
            <conv:BrushRoundConverter x:Key="BrushRoundConverter" />
            <conv:BorderClipConverter x:Key="BorderClipConverter" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <conv:EqualityToVisibilityConverter x:Key="EqualityToVisibilityConverter" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolToggleListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource DividerBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="14,6,14,6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Grid>
                            <Border
                                x:Name="MouseOverBorder"
                                Background="{TemplateBinding Foreground,
                                                             Converter={StaticResource BrushRoundConverter}}"
                                Opacity="0" />
                            <Border
                                x:Name="SelectedBackgroundBorder"
                                Background="{DynamicResource Divider}"
                                Opacity="0" />
                            <customRipple:Ripple
                                x:Name="Ripple"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Feedback="{TemplateBinding Foreground,
                                                           Converter={StaticResource BrushRoundConverter}}"
                                Focusable="False"
                                Opacity=".56"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border
                                x:Name="SelectedBorder"
                                BorderBrush="{DynamicResource Divider}"
                                BorderThickness="0"
                                Opacity="0"
                                Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=SelectionMode, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter={x:Static SelectionMode.Extended}, Mode=OneWay}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.03"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="*" To="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackgroundBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Selected" To="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="SelectedBackgroundBorder"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackgroundBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackgroundBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Ripple" Property="Opacity" Value=".92" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolToggleListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource SectionBackground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="helpers:ListBoxAssist.IsToggle" Value="True" />
        <Setter Property="helpers:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ToolToggleListBoxItem}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type customPackIcon:PackIcon}">
                            <Setter Property="FrameworkElement.Width" Value="22" />
                            <Setter Property="FrameworkElement.Height" Value="22" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <customCard:Card
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            helpers:ShadowAssist.ShadowDepth="{TemplateBinding helpers:ShadowAssist.ShadowDepth}"
                            Background="{TemplateBinding Background}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </customCard:Card>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ToolVerticalToggleListBox"
        BasedOn="{StaticResource ToolToggleListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ToolToggleFlatListBox"
        BasedOn="{StaticResource ToolToggleListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="helpers:ShadowAssist.ShadowDepth" Value="Depth0" />
    </Style>

    <Style x:Key="ListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource SectionBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SectionBackground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="helpers:ListBoxItemAssist.ShowSelection" Value="{Binding Path=(helpers:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource AncestorType=ListBox}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Grid>
                            <Border
                                x:Name="MouseOverBorder"
                                Background="{TemplateBinding Foreground,
                                                             Converter={StaticResource BrushRoundConverter}}"
                                Opacity="0" />

                            <Border
                                x:Name="SelectedBorder"
                                Background="{DynamicResource SelectionBgBrush}"
                                BorderBrush="{DynamicResource SelectionBorderBrush}"
                                Opacity="0" />
                            <customRipple:Ripple
                                x:Name="Ripple"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Feedback="{TemplateBinding Foreground,
                                                           Converter={StaticResource BrushRoundConverter}}"
                                Focusable="False"
                                RecognizesAccessKey="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.6" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.03"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource SelectionBorderBrush}" />
                            <Setter Property="Background" Value="{DynamicResource SelectionBgBrush}" />

                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(helpers:ListBoxItemAssist.ShowSelection)}" Value="False">
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SelectedBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Ripple" Property="Feedback" Value="Transparent" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardsListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0,0,8,8" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <customCard:Card
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource SectionBackground}" />
        <Setter Property="helpers:TextFieldAssist.UnderlineBrush" Value="{DynamicResource AccentBrush}" />
        <Setter Property="helpers:TextFieldAssist.UnderlineCornerRadius" Value="1" />
        <Setter Property="helpers:TextFieldAssist.DecorationVisibility" Value="Visible" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="4,2,4,2" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="helpers:ListBoxItemAssist.CornerRadius" Value="4" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="border"
                        Margin="{TemplateBinding Margin}"
                        ClipToBounds="{TemplateBinding ClipToBounds}"
                        CornerRadius="{Binding Path=(helpers:ListBoxItemAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Grid.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </Grid.Clip>
                            <Border
                                x:Name="MouseOverBorder"
                                Background="{TemplateBinding Foreground,
                                                             Converter={StaticResource BrushRoundConverter}}"
                                Opacity="0" />

                            <Border
                                x:Name="SelectedBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                            <customRipple:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Feedback="{TemplateBinding Foreground,
                                                           Converter={StaticResource BrushRoundConverter}}"
                                Focusable="False"
                                RecognizesAccessKey="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <customUnderline:Underline
                                x:Name="Underline"
                                VerticalAlignment="Bottom"
                                Background="{TemplateBinding helpers:TextFieldAssist.UnderlineBrush}"
                                CornerRadius="{TemplateBinding helpers:TextFieldAssist.UnderlineCornerRadius}"
                                Visibility="{TemplateBinding helpers:TextFieldAssist.DecorationVisibility}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MouseOverBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.6" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.12"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected" />
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.12"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        x:Key="NavigationPrimaryListBoxItem"
        BasedOn="{StaticResource NavigationListBoxItem}"
        TargetType="{x:Type ListBoxItem}" />



    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CardsListBox"
        BasedOn="{StaticResource ListBoxStyle}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource CardsListBoxItem}" />
    </Style>

    <Style
        x:Key="NavigationListBox"
        BasedOn="{StaticResource ListBoxStyle}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource NavigationListBoxItem}" />
    </Style>

    <Style
        x:Key="NavigationPrimaryListBox"
        BasedOn="{StaticResource ListBoxStyle}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource NavigationPrimaryListBoxItem}" />
    </Style>



    <Style x:Key="FilterChipListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource FilterChipCheckBox}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterChipListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource FilterChipListBoxItem}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type customPackIcon:PackIcon}">
                            <Setter Property="FrameworkElement.Width" Value="22" />
                            <Setter Property="FrameworkElement.Height" Value="22" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterChipPrimaryListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource FilterChipPrimaryCheckBox}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FilterChipPrimaryListBox"
        BasedOn="{StaticResource FilterChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FilterChipPrimaryListBoxItem}" />
    </Style>

    <Style x:Key="FilterChipAccentListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource FilterChipAccentCheckBox}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FilterChipAccentListBox"
        BasedOn="{StaticResource FilterChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FilterChipAccentListBoxItem}" />
    </Style>

    <Style x:Key="FilterChipOutlineListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource FilterChipOutlineCheckBox}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FilterChipOutlineListBox"
        BasedOn="{StaticResource FilterChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FilterChipOutlineListBoxItem}" />
    </Style>

    <Style x:Key="FilterChipPrimaryOutlineListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource FilterChipPrimaryOutlineCheckBox}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FilterChipPrimaryOutlineListBox"
        BasedOn="{StaticResource FilterChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FilterChipPrimaryOutlineListBoxItem}" />
    </Style>

    <Style x:Key="FilterChipAccentOutlineListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <CheckBox
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource FilterChipAccentOutlineCheckBox}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FilterChipAccentOutlineListBox"
        BasedOn="{StaticResource FilterChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FilterChipAccentOutlineListBoxItem}" />
    </Style>

    <Style x:Key="ChoiceChipListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <RadioButton
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        GroupName="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource ChoiceChipRadioButton}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ChoiceChipListBox"
        BasedOn="{StaticResource FilterChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChoiceChipListBoxItem}" />
    </Style>

    <Style x:Key="ChoiceChipPrimaryListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <RadioButton
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        GroupName="{Binding Name, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource ChoiceChipPrimaryRadioButton}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ChoiceChipPrimaryListBox"
        BasedOn="{StaticResource ChoiceChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChoiceChipPrimaryListBoxItem}" />
    </Style>

    <Style x:Key="ChoiceChipAccentListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <RadioButton
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        GroupName="{Binding Name, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource ChoiceChipAccentRadioButton}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ChoiceChipAccentListBox"
        BasedOn="{StaticResource ChoiceChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChoiceChipAccentListBoxItem}" />
    </Style>

    <Style x:Key="ChoiceChipOutlineListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <RadioButton
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        GroupName="{Binding Name, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource ChoiceChipOutlineRadioButton}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ChoiceChipOutlineListBox"
        BasedOn="{StaticResource ChoiceChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChoiceChipOutlineListBoxItem}" />
    </Style>

    <Style x:Key="ChoiceChipPrimaryOutlineListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <RadioButton
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        GroupName="{Binding Name, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource ChoiceChipPrimaryOutlineRadioButton}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ChoiceChipPrimaryOutlineListBox"
        BasedOn="{StaticResource ChoiceChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChoiceChipPrimaryOutlineListBoxItem}" />
    </Style>

    <Style x:Key="ChoiceChipAccentOutlineListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <RadioButton
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        GroupName="{Binding Name, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                        IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        Style="{StaticResource ChoiceChipAccentOutlineRadioButton}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ChoiceChipAccentOutlineListBox"
        BasedOn="{StaticResource ChoiceChipListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ChoiceChipAccentOutlineListBoxItem}" />
    </Style>
</ResourceDictionary>